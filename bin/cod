#!/bin/bash
SCRIPT_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [ x"$1" == x"-f" ]; then
    FORCE_REBUILD=T
    shift
else
    FORCE_REBUILD=F
fi

APP_ID=$1
APP_BUILD_VER=$2
APP_SERVER=$3


BUILD_PATH=${SCRIPT_PATH}/../protected/runtime/build
COD_BUILD="$( cd ${BUILD_PATH} && pwd )"
# APP 构建编译目标位置
APP_BUILD_DIR=${COD_BUILD}/${APP_ID}-${APP_BUILD_VER}


# 获取相关变量
source app/${APP_ID}.ini
source server/${APP_SERVER}.ini


eval "AS_DEPLOY_ROOT=\${AS_URL_$APP_DEPLOY_MODE}"

# 打印相关变量
t_var() {
    local val=$(eval echo "\$$1")
    printf "| %18s | %-62s |\n" $1 $val
}
debug_var() {
    for key in APP_ID APP_NAME APP_DEPLOY_MODE APP_BUILD_VER \
        APP_SERVER AS_UPDATE_MODE APP_BUILD_DIR AS_DEPLOY_ROOT APP_DEPLOY_PATH \
        FORCE_REBUILD
    do
        t_var $key
    done
}

build() {
    if [ -d "${APP_BUILD_DIR}" -a x"$FORCE_REBUILD" == x"F" ]; then
        echo 'build (ignore: build dir existed)'
    else
        echo 'build'
        mkdir -p ${APP_BUILD_DIR}

        echo svn export -r ${APP_BUILD_VER} ${APP_REPO_URL} ${APP_BUILD_DIR}/
        svn export --force -r ${APP_BUILD_VER} ${APP_REPO_URL} ${APP_BUILD_DIR}/ \
            --username ${APP_REPO_USER} --password ${APP_REPO_PASS}


        # APP_NAME=$(ls $APP_BUILD_DIR/app)

        if [ -z "$APP_DEPLOY_PATH" ]; then
            APP_DEPLOY_PATH=$APP_NAME
        fi


        app-build ${APP_BUILD_DIR}
    fi
}

app-build() {
    [ -e $1/build ] && $1/build

    # 根据项目代码类型，调用相应的 构建命令
    MODE_BUILD=${APP_DEPLOY_MODE}-build
    # 先后先判断函数 $MODE_BUILD 是否存在
    if declare -F $MODE_BUILD > /dev/null; then
        $MODE_BUILD $1
    fi
}

YKAPP-build() {
    if [ x"$APP_NAME" != x"$APP_DEPLOY_PATH" ];then
        mv $1/app/$APP_NAME $1/app/$APP_DEPLOY_PATH
        mv $1/htdocs/$APP_NAME $1/htdocs/$APP_DEPLOY_PATH
        mv $1/template/$APP_NAME $1/template/$APP_DEPLOY_PATH
    fi
}


deploy() {
    ${APP_DEPLOY_MODE}-${AS_UPDATE_MODE} "$@"
}

call-rsync() {
    # -auzq \
    echo \
        rsync \
        -rtzvu \
        --progress \
        $1 \
        $2

    # return 0

    rsync \
        -rtzvu \
        --progress \
        $1 \
        $2
}

YKAPP-rsync() {
    call-rsync ${APP_BUILD_DIR}/ ${AS_DEPLOY_ROOT}
}

debug_var

build
deploy
